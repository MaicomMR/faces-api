name: Slash command /review-ai

on:
  issue_comment:
    types: [created] 

jobs:
  call-ai-review-api:
    # Só roda se for PR e o comentário começar com /review-ai
    if: >
      (github.event_name == 'issue_comment' &&
       github.event.issue.pull_request != null &&
       startsWith(github.event.comment.body, '/review-ai'))
      ||
      (github.event_name == 'pull_request_review_comment' &&
       startsWith(github.event.comment.body, '/review-ai'))

    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: read
      issues: read

    steps:
      - name: Extrair argumentos do comando
        id: parse
        shell: bash
        run: |
          body="${{ github.event.comment.body }}"
          body="${body//$'\r'/}"                       # normaliza
          args="${body#*/chama-api}"                   # tudo após o comando
          args="$(echo "$args" | sed -e 's/^[[:space:]]*//')"
          echo "args=$args" >> "$GITHUB_OUTPUT"

      - name: Montar payload
        id: payload
        shell: bash
        run: |
          
          pr_number="${{ github.event.issue.number }}"
          if [ -z "$pr_number" ]; then pr_number="${{ github.event.pull_request.number }}"; fi

          jq -n \
            --arg owner "${{ github.repository_owner }}" \
            --arg repo        "${{ github.repository }}" \
            --arg pr_number   "$pr_number" \
            --arg comment_id  "${{ github.event.comment.id }}" \
            --arg commenter   "${{ github.event.comment.user.login }}" \
            --arg args        "${{ steps.parse.outputs.args }}" \
            --arg sha         "${{ github.sha }}" \
            --arg comment_url "${{ github.event.comment.html_url }}" \
            '{
              owner: $owner,
              repo:        $repo,
              pr_number:   ($pr_number|tonumber),
              comment_id:  ($comment_id|tonumber),
              commenter:   $commenter,
              args:        $args,
              sha:         $sha,
              comment_url: $comment_url
            }' > payload.json

          echo "Payload:"
          cat payload.json

      - name: Chamando API
        env:
          API_URL:   ${{ secrets.MY_API_URL }}
          API_TOKEN: ${{ secrets.MY_API_TOKEN }}
        run: |
          curl -sS -X POST "$API_URL" \
            -H "Content-Type: application/json" \
            -H "Authorization: Bearer $API_TOKEN" \
            --data-binary @payload.json